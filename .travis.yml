# use the latest ubuntu environment (18.04) available on travis
dist: xenial

language: go

# Force-enable Go modules. Also force go to use the code in vendor/
# These will both be unnecessary when Go 1.13 lands.
env:
  matrix:
    - GO111MODULE=on
  global:
    # secrets needed to build
    secure: SAPXown0h8da9pcaVYJSOP1D+DzeOmFTeC37rFNjhhJxBwQ6iKQ6Mh2+93OdBl39On7iFUn26BmarpRLjRDrlRqtx1sVieraz6ysAGnF4KoBG4r9fmNKx+yuRdPYU9mqiPS7gN8wrEAAr0wb4QLFC+NN72HNY9MzH1LAuhrGgK+ryv3V0LYFrU38/C+Haq41EuXJLG0NAc8OjrJNj9hUCgUIvwWfWPRNv+19i++Ya2uSAkZEbMsldOVQgvZrmPKOc+12CkizZLVVKiM6Ejfn0sAlfrQw5dC8QBJYRmea7HDx4/PCFH3DMZNxaRy9EZJQ3Ht9fQ7jy2WxDi6ga5riBC2TQaEAtrjBFOv9lW3iF7aRo/6ccbZNP42Lmjlv/zVf8dGbZWMF1me4yreaUugkrcBIcAtXtIQWSaXvAITi5hCOZ/9UKfJl1FlM3twcRY7Y9LgsZLiQg9ES8dL7HsGLnFmM9+b/Dpwb+M1YphaN5fAOsbGuuOR8dBKOBdWJthrZ2Sovcu6utA4QZvrOAmUib8qdoT8CRq9SArsix0nNFEYoKyt+TsfO9C41yOlvBzIRiEDEVE7udp2o1j4AXHF1CW3L2YVtE5mcKc6nKmlv9BGJnmV2unkPreZyICdAMnlIvzmjALDd3VLXqxKbetZruxJ0DXytt1r+0p1S/n/EpeI=

# You don't need to test on very old versions of the Go compiler. It's the user's
# responsibility to keep their compiler up to date.
go:
  - 1.12.x

# Only clone the most recent commit.
git:
  depth: 1

# Skip the install step. Don't `go get` dependencies. Only build with the code
# in vendor/
install: true

# Don't email me the results of the test runs.
notifications:
  email: false

# Anything in before_script that returns a nonzero exit code will flunk the
# build and immediately stop. It's sorta like having set -e enabled in bash.
# Make sure golangci-lint is vendored.
before_script:
  - curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin

# script always runs to completion (set +e). If we have linter issues AND a
# failing test, we want to see both. Configure golangci-lint with a
# .golangci.yml file at the top level of your repo.
script:
  - golangci-lint run       # run a bunch of code checkers/linters in parallel
  - go test -v -race ./...  # Run all the tests with the race detector enabled
  - go get github.com/philwinder/gocoverage
  - go get github.com/mattn/goveralls
  - gocoverage
  - goveralls -coverprofile=profile.cov -repotoken=$COVERALLS_TOKEN
  - go test -race -coverprofile=coverage.txt -covermode=atomic

after_success:
  - bash <(curl -s https://codecov.io/bash)
